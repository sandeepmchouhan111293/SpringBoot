package com.infybank.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.core.env.Environment;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import com.infybank.dto.CustomerDTO;
import com.infybank.entity.Customer;
import com.infybank.exception.InfyBankException;
import com.infybank.service.CustomerService;

@RestController
@RequestMapping(value="/infybank")
public class CustomerAPIController {

	@Autowired
	private CustomerService customerService;
	
	@Autowired
	private Environment environment;
	
	@RequestMapping(value="/customers",method=RequestMethod.GET)
	public ResponseEntity<List<CustomerDTO>> getAllCustomerDetails() throws InfyBankException{
		return new ResponseEntity<>(customerService.getAllCustomerDetails(),HttpStatus.OK);
	}
	
	
	@RequestMapping(value="/customers/{customerId}",method=RequestMethod.GET)
	public  ResponseEntity<CustomerDTO> getCustomerDetails(@PathVariable("customerId") Integer customerId){
		CustomerDTO customer = customerService.getCustomerDetails(customerId);
		return new ResponseEntity<>(customer,HttpStatus.OK);
	}
	
	@RequestMapping(value="/customers",method=RequestMethod.POST)
	public ResponseEntity<String> addCustomer(@RequestBody Customer customer){
		Integer id = customerService.addCustomer(customer);
		String message = environment.getProperty("API.INSERT_SUCCESS")+id;
		return new ResponseEntity<>(message, HttpStatus.CREATED);
	}
	
	@RequestMapping(value="/customers/{customerId}",method=RequestMethod.PUT)
	public ResponseEntity<CustomerDTO> updateCustomer(@PathVariable("customerId") Integer customerId,@RequestBody Customer customer){
		CustomerDTO cust = customerService.getCustomerDetails(customerId);
		if(cust.getName() != null) cust.setName(customer.getName());
		if(cust.getEmailId() != null) cust.setEmailId(customer.getEmailId());
		if(cust.getDateOfBirth() != null) cust.setDateOfBirth(customer.getDateOfBirth());
		String message = environment.getProperty("API.UPDATE_SUCCESS");
		return new ResponseEntity<>(customerService.updateCustomer(cust),);
	}
		
	@RequestMapping(value="/customers/{customerId}",method=RequestMethod.DELETE)
	public String deleteCustomer(@PathVariable("customerId") Integer customerId){
		customerService.deleteCustomer(customerId);
		return "Id is deleted";		
	}
}
